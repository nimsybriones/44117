// Generated from MiniC.g4 by ANTLR 4.13.2
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,17,96,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,
1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,5,4,60,
8,4,10,4,12,4,63,9,4,1,5,4,5,66,8,5,11,5,12,5,67,1,6,1,6,1,7,1,7,1,8,1,8,
1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,
4,16,91,8,16,11,16,12,16,92,1,16,1,16,0,0,17,1,1,3,2,5,3,7,4,9,5,11,6,13,
7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,1,0,4,2,0,65,
90,97,122,3,0,48,57,65,90,97,122,1,0,48,57,3,0,9,10,13,13,32,32,98,0,1,1,
0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,
0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,1,35,1,
0,0,0,3,39,1,0,0,0,5,45,1,0,0,0,7,50,1,0,0,0,9,57,1,0,0,0,11,65,1,0,0,0,
13,69,1,0,0,0,15,71,1,0,0,0,17,73,1,0,0,0,19,75,1,0,0,0,21,77,1,0,0,0,23,
79,1,0,0,0,25,81,1,0,0,0,27,83,1,0,0,0,29,85,1,0,0,0,31,87,1,0,0,0,33,90,
1,0,0,0,35,36,5,105,0,0,36,37,5,110,0,0,37,38,5,116,0,0,38,2,1,0,0,0,39,
40,5,102,0,0,40,41,5,108,0,0,41,42,5,111,0,0,42,43,5,97,0,0,43,44,5,116,
0,0,44,4,1,0,0,0,45,46,5,99,0,0,46,47,5,104,0,0,47,48,5,97,0,0,48,49,5,114,
0,0,49,6,1,0,0,0,50,51,5,114,0,0,51,52,5,101,0,0,52,53,5,116,0,0,53,54,5,
117,0,0,54,55,5,114,0,0,55,56,5,110,0,0,56,8,1,0,0,0,57,61,7,0,0,0,58,60,
7,1,0,0,59,58,1,0,0,0,60,63,1,0,0,0,61,59,1,0,0,0,61,62,1,0,0,0,62,10,1,
0,0,0,63,61,1,0,0,0,64,66,7,2,0,0,65,64,1,0,0,0,66,67,1,0,0,0,67,65,1,0,
0,0,67,68,1,0,0,0,68,12,1,0,0,0,69,70,5,42,0,0,70,14,1,0,0,0,71,72,5,47,
0,0,72,16,1,0,0,0,73,74,5,43,0,0,74,18,1,0,0,0,75,76,5,45,0,0,76,20,1,0,
0,0,77,78,5,40,0,0,78,22,1,0,0,0,79,80,5,41,0,0,80,24,1,0,0,0,81,82,5,123,
0,0,82,26,1,0,0,0,83,84,5,125,0,0,84,28,1,0,0,0,85,86,5,44,0,0,86,30,1,0,
0,0,87,88,5,59,0,0,88,32,1,0,0,0,89,91,7,3,0,0,90,89,1,0,0,0,91,92,1,0,0,
0,92,90,1,0,0,0,92,93,1,0,0,0,93,94,1,0,0,0,94,95,6,16,0,0,95,34,1,0,0,0,
4,0,61,67,92,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class MiniCLexer extends antlr4.Lexer {

    static grammarFileName = "MiniC.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'int'", "'float'", "'char'", "'return'", 
                         null, null, "'*'", "'/'", "'+'", "'-'", "'('", 
                         "')'", "'{'", "'}'", "','", "';'" ];
	static symbolicNames = [ null, "INT_TYPE", "FLOAT_TYPE", "CHAR_TYPE", "RETURN", 
                          "IDENT", "ENTERO", "MUL", "DIV", "ADD", "SUB", 
                          "LPAREN", "RPAREN", "LBRACE", "RBRACE", "COMMA", 
                          "SEMI", "WS" ];
	static ruleNames = [ "INT_TYPE", "FLOAT_TYPE", "CHAR_TYPE", "RETURN", "IDENT", 
                      "ENTERO", "MUL", "DIV", "ADD", "SUB", "LPAREN", "RPAREN", 
                      "LBRACE", "RBRACE", "COMMA", "SEMI", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

MiniCLexer.EOF = antlr4.Token.EOF;
MiniCLexer.INT_TYPE = 1;
MiniCLexer.FLOAT_TYPE = 2;
MiniCLexer.CHAR_TYPE = 3;
MiniCLexer.RETURN = 4;
MiniCLexer.IDENT = 5;
MiniCLexer.ENTERO = 6;
MiniCLexer.MUL = 7;
MiniCLexer.DIV = 8;
MiniCLexer.ADD = 9;
MiniCLexer.SUB = 10;
MiniCLexer.LPAREN = 11;
MiniCLexer.RPAREN = 12;
MiniCLexer.LBRACE = 13;
MiniCLexer.RBRACE = 14;
MiniCLexer.COMMA = 15;
MiniCLexer.SEMI = 16;
MiniCLexer.WS = 17;



